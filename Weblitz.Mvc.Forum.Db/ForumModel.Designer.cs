//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Weblitz.Mvc.Forum.Model", "FK_Topics_Forums", "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Weblitz.Mvc.Forum.Db.Forum), "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Weblitz.Mvc.Forum.Db.Topic), true)]
[assembly: EdmRelationshipAttribute("Weblitz.Mvc.Forum.Model", "FK_Posts_Posts", "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Weblitz.Mvc.Forum.Db.Post), "Child", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Weblitz.Mvc.Forum.Db.Post), true)]
[assembly: EdmRelationshipAttribute("Weblitz.Mvc.Forum.Model", "FK_Posts_Topics", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Weblitz.Mvc.Forum.Db.Topic), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Weblitz.Mvc.Forum.Db.Post), true)]

#endregion

namespace Weblitz.Mvc.Forum.Db
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForumEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForumEntities object using the connection string found in the 'ForumEntities' section of the application configuration file.
        /// </summary>
        public ForumEntities() : base("name=ForumEntities", "ForumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForumEntities object.
        /// </summary>
        public ForumEntities(string connectionString) : base(connectionString, "ForumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForumEntities object.
        /// </summary>
        public ForumEntities(EntityConnection connection) : base(connection, "ForumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Forum> Forums
        {
            get
            {
                if ((_Forums == null))
                {
                    _Forums = base.CreateObjectSet<Forum>("Forums");
                }
                return _Forums;
            }
        }
        private ObjectSet<Forum> _Forums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Post>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Post> _Posts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topics
        {
            get
            {
                if ((_Topics == null))
                {
                    _Topics = base.CreateObjectSet<Topic>("Topics");
                }
                return _Topics;
            }
        }
        private ObjectSet<Topic> _Topics;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForums(Forum forum)
        {
            base.AddObject("Forums", forum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Posts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosts(Post post)
        {
            base.AddObject("Posts", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopics(Topic topic)
        {
            base.AddObject("Topics", topic);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Weblitz.Mvc.Forum.Model", Name="Forum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Forum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Forum object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Forum CreateForum(global::System.Int32 id, global::System.String name)
        {
            Forum forum = new Forum();
            forum.Id = id;
            forum.Name = name;
            return forum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Weblitz.Mvc.Forum.Model", "FK_Topics_Forums", "Topic")]
        public EntityCollection<Topic> Topics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Topic>("Weblitz.Mvc.Forum.Model.FK_Topics_Forums", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Topic>("Weblitz.Mvc.Forum.Model.FK_Topics_Forums", "Topic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Weblitz.Mvc.Forum.Model", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="publishedDate">Initial value of the PublishedDate property.</param>
        public static Post CreatePost(global::System.Int32 id, global::System.Int32 topicId, global::System.String body, global::System.String author, global::System.DateTime publishedDate)
        {
            Post post = new Post();
            post.Id = id;
            post.TopicId = topicId;
            post.Body = body;
            post.Author = author;
            post.PublishedDate = publishedDate;
            return post;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                OnTopicIdChanging(value);
                ReportPropertyChanging("TopicId");
                _TopicId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicId");
                OnTopicIdChanged();
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private global::System.DateTime _PublishedDate;
        partial void OnPublishedDateChanging(global::System.DateTime value);
        partial void OnPublishedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Weblitz.Mvc.Forum.Model", "FK_Posts_Posts", "Child")]
        public EntityCollection<Post> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Posts", "Child");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Posts", "Child", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Weblitz.Mvc.Forum.Model", "FK_Posts_Posts", "Parent")]
        public Post Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Posts", "Parent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Posts", "Parent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Posts", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Posts", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Weblitz.Mvc.Forum.Model", "FK_Posts_Topics", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("Weblitz.Mvc.Forum.Model.FK_Posts_Topics", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("Weblitz.Mvc.Forum.Model.FK_Posts_Topics", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("Weblitz.Mvc.Forum.Model.FK_Posts_Topics", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("Weblitz.Mvc.Forum.Model.FK_Posts_Topics", "Topic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Weblitz.Mvc.Forum.Model", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="forumId">Initial value of the ForumId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="publishedDate">Initial value of the PublishedDate property.</param>
        /// <param name="sticky">Initial value of the Sticky property.</param>
        public static Topic CreateTopic(global::System.Int32 id, global::System.Int32 forumId, global::System.String title, global::System.String body, global::System.String author, global::System.DateTime publishedDate, global::System.Boolean sticky)
        {
            Topic topic = new Topic();
            topic.Id = id;
            topic.ForumId = forumId;
            topic.Title = title;
            topic.Body = body;
            topic.Author = author;
            topic.PublishedDate = publishedDate;
            topic.Sticky = sticky;
            return topic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumId
        {
            get
            {
                return _ForumId;
            }
            set
            {
                OnForumIdChanging(value);
                ReportPropertyChanging("ForumId");
                _ForumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForumId");
                OnForumIdChanged();
            }
        }
        private global::System.Int32 _ForumId;
        partial void OnForumIdChanging(global::System.Int32 value);
        partial void OnForumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private global::System.DateTime _PublishedDate;
        partial void OnPublishedDateChanging(global::System.DateTime value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sticky
        {
            get
            {
                return _Sticky;
            }
            set
            {
                OnStickyChanging(value);
                ReportPropertyChanging("Sticky");
                _Sticky = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sticky");
                OnStickyChanged();
            }
        }
        private global::System.Boolean _Sticky;
        partial void OnStickyChanging(global::System.Boolean value);
        partial void OnStickyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Weblitz.Mvc.Forum.Model", "FK_Topics_Forums", "Forum")]
        public Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("Weblitz.Mvc.Forum.Model.FK_Topics_Forums", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("Weblitz.Mvc.Forum.Model.FK_Topics_Forums", "Forum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("Weblitz.Mvc.Forum.Model.FK_Topics_Forums", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Forum>("Weblitz.Mvc.Forum.Model.FK_Topics_Forums", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Weblitz.Mvc.Forum.Model", "FK_Posts_Topics", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Topics", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("Weblitz.Mvc.Forum.Model.FK_Posts_Topics", "Post", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
